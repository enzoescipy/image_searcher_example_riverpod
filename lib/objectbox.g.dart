// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'repository/objectbox_manager/vo/image_vo.dart';
import 'repository/objectbox_manager/vo/text_vo.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 7591924268142909860),
      name: 'ImageItemEntity',
      lastPropertyId: const obx_int.IdUid(5, 5782348062909264800),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6864852738361812278),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1584799182175174513),
            name: 'imageURL',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4060779841805375844),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3366816717147113113),
            name: 'dateTime',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 5782348062909264800),
            name: 'body',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 5646988095139482629),
      name: 'TextItemEntity',
      lastPropertyId: const obx_int.IdUid(5, 6453321474224875660),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2164804167402744447),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5563479294535974218),
            name: 'url',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6000453538185640077),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6004461028468315505),
            name: 'dateTime',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6453321474224875660),
            name: 'body',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 5646988095139482629),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    ImageItemEntity: obx_int.EntityDefinition<ImageItemEntity>(
        model: _entities[0],
        toOneRelations: (ImageItemEntity object) => [],
        toManyRelations: (ImageItemEntity object) => {},
        getId: (ImageItemEntity object) => object.id,
        setId: (ImageItemEntity object, int id) {
          object.id = id;
        },
        objectToFB: (ImageItemEntity object, fb.Builder fbb) {
          final imageURLOffset = object.imageURL == null
              ? null
              : fbb.writeString(object.imageURL!);
          final titleOffset =
              object.title == null ? null : fbb.writeString(object.title!);
          final dateTimeOffset = object.dateTime == null
              ? null
              : fbb.writeString(object.dateTime!);
          final bodyOffset =
              object.body == null ? null : fbb.writeString(object.body!);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, imageURLOffset);
          fbb.addOffset(2, titleOffset);
          fbb.addOffset(3, dateTimeOffset);
          fbb.addOffset(4, bodyOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = ImageItemEntity()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..imageURL = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 6)
            ..title = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 8)
            ..dateTime = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 10)
            ..body = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 12);

          return object;
        }),
    TextItemEntity: obx_int.EntityDefinition<TextItemEntity>(
        model: _entities[1],
        toOneRelations: (TextItemEntity object) => [],
        toManyRelations: (TextItemEntity object) => {},
        getId: (TextItemEntity object) => object.id,
        setId: (TextItemEntity object, int id) {
          object.id = id;
        },
        objectToFB: (TextItemEntity object, fb.Builder fbb) {
          final urlOffset =
              object.url == null ? null : fbb.writeString(object.url!);
          final titleOffset =
              object.title == null ? null : fbb.writeString(object.title!);
          final dateTimeOffset = object.dateTime == null
              ? null
              : fbb.writeString(object.dateTime!);
          final bodyOffset =
              object.body == null ? null : fbb.writeString(object.body!);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, urlOffset);
          fbb.addOffset(2, titleOffset);
          fbb.addOffset(3, dateTimeOffset);
          fbb.addOffset(4, bodyOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = TextItemEntity()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..url = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 6)
            ..title = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 8)
            ..dateTime = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 10)
            ..body = const fb.StringReader(asciiOptimization: true)
                .vTableGetNullable(buffer, rootOffset, 12);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ImageItemEntity] entity fields to define ObjectBox queries.
class ImageItemEntity_ {
  /// See [ImageItemEntity.id].
  static final id =
      obx.QueryIntegerProperty<ImageItemEntity>(_entities[0].properties[0]);

  /// See [ImageItemEntity.imageURL].
  static final imageURL =
      obx.QueryStringProperty<ImageItemEntity>(_entities[0].properties[1]);

  /// See [ImageItemEntity.title].
  static final title =
      obx.QueryStringProperty<ImageItemEntity>(_entities[0].properties[2]);

  /// See [ImageItemEntity.dateTime].
  static final dateTime =
      obx.QueryStringProperty<ImageItemEntity>(_entities[0].properties[3]);

  /// See [ImageItemEntity.body].
  static final body =
      obx.QueryStringProperty<ImageItemEntity>(_entities[0].properties[4]);
}

/// [TextItemEntity] entity fields to define ObjectBox queries.
class TextItemEntity_ {
  /// See [TextItemEntity.id].
  static final id =
      obx.QueryIntegerProperty<TextItemEntity>(_entities[1].properties[0]);

  /// See [TextItemEntity.url].
  static final url =
      obx.QueryStringProperty<TextItemEntity>(_entities[1].properties[1]);

  /// See [TextItemEntity.title].
  static final title =
      obx.QueryStringProperty<TextItemEntity>(_entities[1].properties[2]);

  /// See [TextItemEntity.dateTime].
  static final dateTime =
      obx.QueryStringProperty<TextItemEntity>(_entities[1].properties[3]);

  /// See [TextItemEntity.body].
  static final body =
      obx.QueryStringProperty<TextItemEntity>(_entities[1].properties[4]);
}
